#!/usr/bin/env python
PACKAGE = "autopilot_monitor"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# autopilot_monitor

gen.add("enable_goal_pose",   bool_t,   0, "Enable position and yaw changes",  False)
gen.add("goal_x_position", double_t, 0, "X of the goal position", 0, -10.0, 10.0)
gen.add("goal_y_position", double_t, 0, "Y of the goal position", 0, -10.0, 10.0)
gen.add("goal_z_position", double_t, 0, "Height of the goal position", 0, 0.0, 10)
gen.add("goal_heading", double_t, 0, "Desired heading angle", 0, -180.0, 180.0)

gen.add("enable_thrust_bodyrate_control",   bool_t,   0, "Enable thrust and bodyrates feed-through control",  False)
gen.add("goal_thrust", double_t, 0, "Desired thrust in feed-through control", 0, 0.0, 1.0)
gen.add("goal_x_bodyrate", double_t, 0, "Desired x bodyrate in feed-through control", 0, 0.0, 1.0)
gen.add("goal_y_bodyrate", double_t, 0, "Desired y bodyrate in feed-through control", 0, 0.0, 1.0)
gen.add("goal_z_bodyrate", double_t, 0, "Desired z bodyrate in feed-through control", 0, 0.0, 1.0)
gen.add("thrust_scale", double_t, 0, "Thrust scale for MPC output", 1.0, 0.0, 1.0)
gen.add("max_normalized_thrust", double_t, 0, "Maximum normalized thrust", 1.0, 0.0, 1.0)
gen.add("min_normalized_thrust", double_t, 0, "Minimum normalized thrust", 0.02, 0.0, 1.0)

gen.add("enable_weight_tune",   bool_t,   0, "Enable MPC weight tuning",  False)
gen.add("position_xy_weight", double_t, 0, "XY positions weight of NMPC", 50, 0, 500)
gen.add("position_z_weight", double_t, 0, "Z position weight of NMPC", 50, 0, 500)
gen.add("velocity_weight", double_t, 0, "Velocity weight of NMPC", 10, 0, 100)
gen.add("orientation_weight", double_t, 0, "Orientation weight of NMPC", 100, 0, 500)
gen.add("visual_servo_weight", double_t, 0, "Visual servo weight of NMPC", 50, 0, 500)
gen.add("perception_weight", double_t, 0, "Perception weight of NMPC", 100, 0, 500)
gen.add("thrust_weight", double_t, 0, "Thrust weight of NMPC", 1, 0, 10)
gen.add("bodyrate_xy_weight", double_t, 0, "XY bodyrates weight of NMPC", 100, 0, 200)
gen.add("bodyrate_z_weight", double_t, 0, "Z bodyrate weight of NMPC", 10, 0, 200)

gen.add("enable_limit_set",   bool_t,   0, "Enable limit setting",  False)
gen.add("velocity_max", double_t, 0, "Maximum velocity", 0.5, 0, 10)
gen.add("acceleration_max", double_t, 0, "Maximum acceleration", 10, 0, 50)
gen.add("max_move_pos", double_t, 0, "Maximum tracking position difference", 0.3, 0, 2.0)
gen.add("max_move_yaw", double_t, 0, "Maximum tracking yaw difference", 5, 0, 30)
gen.add("max_move_distance", double_t, 0, "Maximum moving distance", 2, 0, 3)
gen.add("max_move_angle_x", double_t, 0, "Maximum moving angle x", 30, 0, 60)
gen.add("max_move_angle_y", double_t, 0, "Maximum moving angle y", 30, 0, 60)
gen.add("thrust_min", double_t, 0, "Minimum thrust", 0.1, 0, 2)
gen.add("thrust_max", double_t, 0, "Maximum thrust", 10, 0, 200)
gen.add("bodyrate_xy_max", double_t, 0, "Maximum xy bodyrates of NMPC", 0.5, 0, 2.0)
gen.add("bodyrate_z_max", double_t, 0, "Maximum z bodyrate of NMPC", 0.5, 0, 2.0)
gen.add("max_altitude", double_t, 0, "Maximum altitude", 5, 0.0, 10.0)

gen.add("enable_control_mode_change",   bool_t,   0, "Enable changes of the control mode",  False)
gen.add("control_mode", int_t, 0, "Control mode", 1,  1, 4)

gen.add("emergency_land",   bool_t,   0, "Trigger emergency land",  False)

exit(gen.generate(PACKAGE, "autopilot_monitor", "Px4RemoteTune"))
